name: build-immortalwrt-r5s

on:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron: 0 21 * * *

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt.git
  FEEDS_CONF: config/immortalwrt.feeds.conf.default
  CONFIG_FILE: config/r5s/immortalwrt.config
  DIY_P1_SH: config/diy-part1.sh
  DIY_P2_SH: config/diy-part2.sh
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai
  WORK_DIR: immortalwrt
  PLATFORM: ramips

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@main

    - name: Free Disk Space (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false
        
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

    - name: Set up dependencies
      run: |
        sudo apt update
        sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache clang cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib g++-multilib git gnutls-dev gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses-dev libpython3-dev libreadline-dev libssl-dev libtool libyaml-dev libz-dev lld llvm lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip python3-ply python3-docutils python3-pyelftools qemu-utils re2c rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev zstd
        sudo apt -y autoremove --purge
        sudo apt clean
        sudo timedatectl set-timezone "${TZ}"
        echo "status=success" >> ${GITHUB_OUTPUT}
        
    - name: Check space usage
      if: (!cancelled())
      run: df -hT
      
    - name: Clone ImmortalWRT source
      run: |
        git clone --depth=1 ${REPO_URL} ${WORK_DIR}

    - name: Copy custom feeds
      run: |
        cp -f ${FEEDS_CONF} ${WORK_DIR}/feeds.conf.default  # 将自定义的 feeds.conf 复制到源码目录中
        chmod +x ${DIY_P1_SH}
        cd ${WORK_DIR}
        ${GITHUB_WORKSPACE}/${DIY_P1_SH}

    - name: Use cachewrtbuild action
      uses: klever1988/cachewrtbuild@main
      with:
        ccache: 'true'  # 启用 ccache，加速构建
        mixkey: ${{ env.PLATFORM }}  # 设置目标平台为 R5S 使用的 ramips
        prefix: ${{ env.WORK_DIR }}  # 使用的源码前缀
        
    - name: Update feeds
      run: |
        cd ${WORK_DIR}
        git checkout
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        cp -f ${CONFIG_FILE} ${WORK_DIR}/.config  # 将自定义的 .config 复制到源码目录中
        chmod +x ${DIY_P2_SH}
        cd ${WORK_DIR}
        ${GITHUB_WORKSPACE}/${DIY_P2_SH}

    - name: Download package
      id: package
      run: |
        cd ${WORK_DIR}
        make defconfig
        make download -j$(nproc)
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Check space usage
      if: steps.package.outputs.status == 'success' && !cancelled()
      run: df -hT

    - name: Build firmware
      id: build
      run: |
        cd ${WORK_DIR}
        make -j$(nproc) #V=s
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Organize files
      id: organize
      if: steps.build.outputs.status == 'success' && !cancelled()
      run: |
        cd ${WORK_DIR}/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT
          
    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Generate release tag
      id: tag
      if: steps.organize.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        touch release.txt
        echo "release_tag=$(date +"%Y.%m.%d-%H%M")" >> $GITHUB_OUTPUT
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      if: steps.tag.outputs.status == 'success' && !cancelled()
      with:
        retain_days: 10
        keep_minimum_runs: 10
        token: ${{ secrets.GH_TOKEN }}
